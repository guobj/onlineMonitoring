<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <!-- 启动springMVC注解 -->
    <context:annotation-config/>

    <!--  启动aop注解 -->
    <aop:aspectj-autoproxy/>

    <!-- 扫描注解所在的包 -->
    <context:component-scan base-package="com.nz.onlineMonitoring">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 加载属性文件 -->
    <!-- <context:property-placeholder location="classpath:jdbc.properties"/> -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <!-- spring收回mybatis权利 -->
    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!-- 通过sqlID的方式 -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--&lt;!&ndash; 加载mybatis核心配置文件 &ndash;&gt;-->
        <property name="configLocation" value="classpath:/mybatis-config.xml"></property>
        <!-- 加载映射文件 -->
        <property name="mapperLocations" value="classpath*:/mybatis/**/*Mapper.xml"></property>
        <!-- 配置数据源 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 继续配置接口代理的方式 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage">
            <value>
                com.nz.onlineMonitoring.**.mapper
            </value>
        </property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 开启事务控制的注解支持 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
        <!--  配置哪些方法需要事务 -->
    <!--<tx:advice id="serviceMethodAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="*" propagation="REQUIRED"/>-->
            <!--&lt;!&ndash; <tx:method name="get*" read-only="true"/>-->
            <!--<tx:method name="load*" read-only="true"/>-->
            <!--<tx:method name="find*" read-only="true"/>-->
            <!--<tx:method name="query*" read-only="true"/> &ndash;&gt;-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!-- 通过aop配置哪个层次的方法需要事务 -->
    <!--<aop:config>-->
        <!--<aop:pointcut expression="execution(* com..*Service.*(..))" id="servicePointcut"/>-->
        <!--<aop:advisor advice-ref="serviceMethodAdvice" pointcut-ref="servicePointcut"/> -->
    <!--</aop:config>-->
    <!-- 可选JdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
</beans>
